--GROUP BY CLAUSE


--GROUPS THE ROWS WITH GIVEN COLUMN
SELECT JOB_ID,AVG(SALARY) FROM EMPLOYEES
GROUP BY JOB_ID
ORDER BY AVG(SALARY) DESC;


--WE CAN USE MORE THAN ONE COLUMN IN THE GROUP BY CLAUSE 
SELECT JOB_ID,DEPARTMENT_ID,MANAGER_ID,AVG(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID,JOB_ID,MANAGER_ID
ORDER BY COUNT(*) DESC;

SELECT count(*) from EMPLOYEES group by DEPARTMENT_ID;

--WE DONT NEED TO USE ALL COLUMNS USED IN GROUP BY IN SELECT
SELECT JOB_ID,AVG(SALARY) FROM EMPLOYEES
GROUP BY JOB_ID,DEPARTMENT_ID;


-- WE CAN USE AS MANY GROUP FUNCTIONS AS WE WANT IN SELECT STATEMENT WHILE WORKING WITH GROUP BY CLAUSE
SELECT AVG(SALARY),SUM(SALARY),MIN(SALARY),MAX(SALARY),COUNT(*) FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
ORDER BY AVG(SALARY);


--COLUMN ALIASIS CANNOT BE USED WITH THE GROUP BY CLAUSE ,BUT THEY CAN BE USED WITH THE ORDER BY CLAUSE
SELECT DEPARTMENT_ID AS DEPARTMENTS,AVG(SALARY)
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID
ORDER BY DEPARTMENT_ID;


-- USE THE WHERE CLAUSE TO RESTRICT THE RESULTING DATA 
SELECT JOB_ID, DEPARTMENT_ID,AVG(SALARY) FROM EMPLOYEES
WHERE JOB_ID IN('ST_MAN','SH_CLERK','ST_CLERK','IT_PROG')
GROUP BY JOB_ID,DEPARTMENT_ID
ORDER BY AVG(SALARY);


--HAVING CLAUSE
--WE CANNOT USE GROUP FUNCTION IN THE WHERE CLAUSE 

SELECT JOB_ID,AVG(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID
HAVING AVG(sALARY) > 10000;

